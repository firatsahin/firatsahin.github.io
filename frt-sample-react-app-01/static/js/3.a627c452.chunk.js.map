{"version":3,"sources":["../node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","routes/MyAlgoTrader.js"],"names":["module","exports","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","BrowseCoinsModal","React","lazy","MyAlgoTrader","props","backTesting","baseCoin","baseCoinBalance","commissionRate","buySellColType","autoBuySellCheckFreq","autoBuySellMakeSureTimes","coins","coinsModalOpen","myCoins","interestedCoins","klineTypes","last500kline","each1min","each3min","each5min","each15min","last1000kline","last24h","each30min","each1h","last7d","klineTypeSelection","coin","myNewCoin","coinName","symbol","isActive","autoBuySell","backTestRan","initialPrice","buyCount","initialBudgetInBaseCoin","Math","floor","upperMarginTarget","lowerMarginTarget","budgetInBaseCoin","setState","binanceWsConnection","WebSocket","onopen","console","log","send","JSON","stringify","map","myCoin","toLowerCase","addEventListener","message","data","parse","e","s","priceNMarginUpdates","c","autoBuySellCheckInterval","setInterval","autoBuySellCheck","priceStr","price","parseFloat","maxPriceSinceLastBuy","lowerMargin","targetCoinAmount","minPriceSinceLastSell","upperMargin","kline","klineMax","klineMin","ktsSegments","split","currentKline","fetch","response","json","klineCallback","a","args","arguments","apply","side","areWeSureEnough","surenessCheck","sell","surenessLevel","buy","grossPurchaseInBaseCoin","netPurchaseInBaseCoin","toFixed","firstBuyPrice","lastBuyPrice","lastSellPrice","netSellInBaseCoin","myActives","style","float","calculateTotalBalance","display","marginRight","onChange","target","options","key1","key2","label","keysCombined","disabled","onClick","clear","overflow","isActiveTable","width","color","className","hidden","checked","backTestStrategyFor","position","height","backgroundColor","marginLeft","min","max","step","modalOpen","loadCoinsToState","closeModalFn","document","title","AppSettings","seoTitle","addCoinToMyCoins","initListeners","close","clearInterval","Component"],"mappings":"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","file":"static/js/3.a627c452.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React, { Component, Suspense } from 'react';\r\nimport AppSettings from '../data/AppSettings';\r\n\r\nconst BrowseCoinsModal = React.lazy(() => import(\"../components/myAlgoTrader/BrowseCoinsModal\"));\r\n\r\nclass MyAlgoTrader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            backTesting: props.backTesting || false,\r\n            baseCoin: 'USDT',\r\n            baseCoinBalance: 100,\r\n            commissionRate: 0.001,\r\n            buySellColType: 'auto',\r\n            autoBuySellCheckFreq: 10, // in seconds\r\n            autoBuySellMakeSureTimes: 3, // after N checks, if desired margin stays still > do the trade\r\n            coins: [], // symbol list (which can be traded with USDT)\r\n            coinsModalOpen: false,\r\n            myCoins: []\r\n        };\r\n        this.interestedCoins = [\"TLM\", \"XLMUP\", \"WAN\", \"XRPUP\", \"BTC\", \"ETH\", \"LTC\", \"BNB\", \"XRP\", \"ENJ\", \"ETC\", \"YFI\", \"DOGE\", \"EOSUP\", \"BEAM\", \"IOST\", \"ADAUP\"];\r\n        this.klineTypes = {\r\n            last500kline: {\r\n                each1min: ['1m', 500],   // last 8,33hours | 1min density \r\n                each3min: ['3m', 500],   // last 1,04days  | 3min density\r\n                each5min: ['5m', 500],   // last 1,74days  | 5min density\r\n                each15min: ['15m', 500], // last 5,20days  | 15min density\r\n            },\r\n            last1000kline: {\r\n                each1min: ['1m', 1000],   // last 16,66hours | 1min density \r\n                each3min: ['3m', 1000],   // last 2,08days   | 3min density\r\n                each5min: ['5m', 1000],   // last 3,47days   | 5min density\r\n                each15min: ['15m', 1000], // last 10,41days  | 15min density\r\n            },\r\n            last24h: {\r\n                each3min: ['3m', 480],  // last 24 hours | 3min density\r\n                each5min: ['5m', 288],  // last 24 hours | 5min density\r\n                each15min: ['15m', 96], // last 24 hours | 15min density\r\n                each30min: ['30m', 48], // last 24 hours | 30min density\r\n                each1h: ['1h', 24],     // last 24 hours | 1h density\r\n            },\r\n            last7d: {\r\n                each15min: ['15m', 96 * 7], // last 7 days | 15min density\r\n                each30min: ['30m', 48 * 7], // last 7 days | 30min density\r\n                each1h: ['1h', 24 * 7],     // last 7 days | 1h density\r\n            }\r\n        };\r\n        this.klineTypeSelection = 'last24h.each15min';\r\n    }\r\n\r\n    addCoinToMyCoins(coin) {\r\n        const myNewCoin = {\r\n            coinName: coin,\r\n            symbol: coin + this.state.baseCoin,\r\n            isActive: false, // true: we are in | false: we are out\r\n            autoBuySell: false, // auto buy/sell feature active or not (for that coin)\r\n            backTestRan: false,\r\n            //buySellSurenessLevels: [5, 10, 15], // for margin %4 -> 4.2 | 4.4 | 4.6\r\n            //surenessLevel: 0,\r\n            initialPrice: null,\r\n            buyCount: 0,\r\n            initialBudgetInBaseCoin: Math.floor((this.state.baseCoinBalance - (this.state.baseCoinBalance * this.state.commissionRate)) / this.interestedCoins.length),\r\n            upperMarginTarget: 4,\r\n            lowerMarginTarget: -4\r\n        };\r\n        myNewCoin.budgetInBaseCoin = myNewCoin.initialBudgetInBaseCoin;\r\n        this.state.myCoins.push(myNewCoin);\r\n        this.setState(this.state);\r\n    }\r\n\r\n    initListeners() {\r\n        if (this.state.backTesting) return;\r\n\r\n        // Binance WebSocket stream (every 1sec.)\r\n        this.binanceWsConnection = new WebSocket('wss://stream.binance.com:9443/ws');\r\n        this.binanceWsConnection.onopen = () => {\r\n            console.log(\"socket(binance) opened\");\r\n            this.binanceWsConnection.send(JSON.stringify({\r\n                \"method\": \"SUBSCRIBE\",\r\n                \"params\": this.state.myCoins.map(myCoin => myCoin.symbol.toLowerCase() + \"@miniTicker\"), // ethusdt@miniTicker | ltcusdt@ticker\r\n                \"id\": 1\r\n            }));\r\n            /*this.binanceWsConnection.send(JSON.stringify({\r\n                \"method\": \"LIST_SUBSCRIPTIONS\",\r\n                \"id\": 1\r\n            }));*/\r\n        }\r\n        this.binanceWsConnection.addEventListener('message', (message) => {\r\n            const data = JSON.parse(message.data);\r\n            //console.log(data);\r\n            if (data.e === \"24hrMiniTicker\") {\r\n                this.state.myCoins.forEach((myCoin) => {\r\n                    if (myCoin.symbol === data.s) { // check related coin\r\n                        this.priceNMarginUpdates(myCoin, data.c);\r\n                    }\r\n                });\r\n                this.setState(this.state);\r\n            }\r\n        });\r\n\r\n        this.autoBuySellCheckInterval = setInterval(() => { // autoBuySellCheck fired every [this.state.autoBuySellCheckFreq] second\r\n            console.log(\"autoBuySellCheck cycle called\");\r\n            this.state.myCoins.forEach((myCoin) => this.autoBuySellCheck(myCoin));\r\n        }, this.state.autoBuySellCheckFreq * 1000);\r\n    }\r\n\r\n    priceNMarginUpdates(myCoin, priceStr) {\r\n        myCoin.price = parseFloat(priceStr);\r\n        if (!myCoin.initialPrice) myCoin.initialPrice = myCoin.price;\r\n        if (myCoin.isActive) { // I'm in > tracking the max\r\n            if (myCoin.price > myCoin.maxPriceSinceLastBuy) myCoin.maxPriceSinceLastBuy = myCoin.price;\r\n            myCoin.lowerMargin = (myCoin.price / myCoin.maxPriceSinceLastBuy * 100) - 100;\r\n            myCoin.budgetInBaseCoin = myCoin.targetCoinAmount * myCoin.price; // re-calculating current budget (then it's used in win/lose calculation)\r\n        } else { // I'm out > tracking the min\r\n            if (!myCoin.minPriceSinceLastSell) myCoin.minPriceSinceLastSell = myCoin.price;\r\n            if (myCoin.price < myCoin.minPriceSinceLastSell) myCoin.minPriceSinceLastSell = myCoin.price;\r\n            myCoin.upperMargin = (myCoin.price / myCoin.minPriceSinceLastSell * 100) - 100;\r\n        }\r\n    }\r\n\r\n    priceNMarginUpdatesWithKline(myCoin, kline) {\r\n        myCoin.price = parseFloat(kline[4]); // the price at the end of kline\r\n        if (!myCoin.initialPrice) myCoin.initialPrice = myCoin.price;\r\n        if (myCoin.isActive) { // I'm in > tracking the max\r\n            const klineMax = parseFloat(kline[2]);\r\n            if (klineMax > myCoin.maxPriceSinceLastBuy) myCoin.maxPriceSinceLastBuy = klineMax;\r\n            myCoin.lowerMargin = (myCoin.price / myCoin.maxPriceSinceLastBuy * 100) - 100;\r\n        } else { // I'm out > tracking the min\r\n            const klineMin = parseFloat(kline[3]);\r\n            if (!myCoin.minPriceSinceLastSell) myCoin.minPriceSinceLastSell = myCoin.price;\r\n            if (klineMin < myCoin.minPriceSinceLastSell) myCoin.minPriceSinceLastSell = klineMin;\r\n            myCoin.upperMargin = (myCoin.price / myCoin.minPriceSinceLastSell * 100) - 100;\r\n        }\r\n    }\r\n\r\n    backTestStrategyFor(myCoin) {\r\n        if (myCoin.backTestRan) return;\r\n        console.log(\"started back test for:\", myCoin);\r\n\r\n        const ktsSegments = this.klineTypeSelection.split('.');\r\n        const currentKline = this.klineTypes[ktsSegments[0]][ktsSegments[1]];\r\n\r\n        myCoin.autoBuySell = true;\r\n        fetch('https://api.binance.com/api/v3/klines?symbol=' + myCoin.symbol + '&interval=' + currentKline[0] + '&limit=' + currentKline[1]).then((response) => {\r\n            response.json().then(data => {\r\n                //console.log(data);\r\n                /*data.forEach((kline) => {\r\n                    this.priceNMarginUpdates(myCoin, kline[1]);\r\n                    this.autoBuySellCheck(myCoin);\r\n                });*/\r\n                const klineCallback = async (i) => {\r\n                    if (i > data.length - 1) {\r\n                        myCoin.backTestRan = true;\r\n                        this.setState(this.state);\r\n                        console.log(\"back test completed!\"); return;\r\n                    }\r\n                    const kline = data[i];\r\n                    //console.log(\"klineCallback iteration #\" + i, kline);\r\n\r\n                    if (true) {\r\n                        // strategy 1: [get price value every X minutes & do buy/sell check]\r\n                        this.priceNMarginUpdates(myCoin, kline[1]);\r\n                    } else {\r\n                        // strategy 2: [get price value every second (which means we have real min-max) & do buy/sell check every X minutes]\r\n                        this.priceNMarginUpdatesWithKline(myCoin, kline);\r\n                    }\r\n\r\n                    this.autoBuySellCheck(myCoin);\r\n                    //this.setState(this.state); await new Promise(resolve => setTimeout(resolve)); // do it animated (comment out for getting result directly)\r\n                    klineCallback(i + 1);\r\n                };\r\n                klineCallback(0);\r\n            });\r\n        });\r\n    }\r\n\r\n    surenessCheck(myCoin, side) {\r\n        let areWeSureEnough = false;\r\n        if (side === 'BUY') {\r\n            areWeSureEnough = true;// TEMP!!\r\n        }\r\n        if (side === 'SELL') {\r\n            areWeSureEnough = true;// TEMP!!\r\n        }\r\n        return areWeSureEnough;\r\n    }\r\n\r\n    autoBuySellCheck(myCoin) {\r\n        if (!myCoin.autoBuySell) return;\r\n        if (myCoin.isActive) { // I'm in > tracking the max\r\n            if (myCoin.lowerMargin < myCoin.lowerMarginTarget) { // we've reached the target margin\r\n                const areWeSureEnough = this.surenessCheck(myCoin, 'SELL'); // sureness check\r\n                if (areWeSureEnough) this.sell(myCoin); // we're sure enough (we were over the margin N times) > so sell\r\n            }\r\n            else myCoin.surenessLevel = 0; // we're below the target margin, reset the \"sureness\"\r\n        } else { // I'm out > tracking the min\r\n            if (myCoin.upperMargin > myCoin.upperMarginTarget) { // we've reached the target margin\r\n                const areWeSureEnough = this.surenessCheck(myCoin, 'BUY'); // sureness check\r\n                if (areWeSureEnough) this.buy(myCoin); // we're sure enough (we were over the margin N times) > so buy\r\n            }\r\n            else myCoin.surenessLevel = 0; // we're below the target margin, reset the \"sureness\"\r\n        }\r\n    }\r\n\r\n    buy(myCoin) {\r\n        if (myCoin.isActive) { console.log(\"can't buy the bought!!\"); return; }\r\n        if (!myCoin.price) { console.log(\"Price not ready yet. Couldn't buy.\"); return; }\r\n\r\n        // commission included to the budget (Ex. buying 6 USDT)\r\n        const grossPurchaseInBaseCoin = myCoin.budgetInBaseCoin; // 6 USDT\r\n        const netPurchaseInBaseCoin = grossPurchaseInBaseCoin / (1 + this.state.commissionRate); // 5.994005994005994 USDT\r\n\r\n        if (this.state.baseCoinBalance - grossPurchaseInBaseCoin < 0) { console.log(\"Your wallet balance is not enough. Couldn't buy.\"); return; }\r\n\r\n        myCoin.isActive = true;\r\n        myCoin.targetCoinAmount = parseFloat((netPurchaseInBaseCoin / myCoin.price).toFixed(6)); // how many target coins could I buy\r\n        if (myCoin.buyCount === 0) myCoin.firstBuyPrice = myCoin.price;\r\n        myCoin.buyCount++;\r\n        myCoin.lastBuyPrice = myCoin.price;\r\n        myCoin.maxPriceSinceLastBuy = myCoin.lastBuyPrice;\r\n\r\n        myCoin.upperMargin = 0; // reset upper margin after buy\r\n        myCoin.budgetInBaseCoin = netPurchaseInBaseCoin; // update budget after buy (commission subtracted from budget)\r\n\r\n        this.setState({ ...this.state, baseCoinBalance: (this.state.baseCoinBalance - grossPurchaseInBaseCoin) });\r\n    }\r\n\r\n    sell(myCoin) {\r\n        if (!myCoin.isActive) { console.log(\"can't sell the sold!!\"); return; }\r\n        myCoin.isActive = false;\r\n        myCoin.lastSellPrice = myCoin.price;\r\n        myCoin.minPriceSinceLastSell = myCoin.lastSellPrice;\r\n\r\n        // commission included to the budget (Ex. selling 5 USDT)\r\n        const grossSellInBaseCoin = myCoin.targetCoinAmount * myCoin.price; // 5 USDT\r\n        const netSellInBaseCoin = grossSellInBaseCoin / (1 + this.state.commissionRate); // +4.9950049950049955 USDT\r\n\r\n        myCoin.lowerMargin = 0; // reset lower margin after sell\r\n        myCoin.budgetInBaseCoin = netSellInBaseCoin; // update budget after buy (commission subtracted from budget)\r\n\r\n        this.setState({ ...this.state, baseCoinBalance: (this.state.baseCoinBalance + netSellInBaseCoin) });\r\n    }\r\n\r\n    calculateTotalBalance() { // total balance calculation (considering active coins & their sell commissions)\r\n        let myActives = 0;\r\n        this.state.myCoins.forEach((myCoin) => { if (myCoin.isActive) myActives += myCoin.targetCoinAmount * myCoin.price; });\r\n        return this.state.baseCoinBalance + myActives - (myActives * this.state.commissionRate);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>\r\n                    <div style={{ float: 'left' }}>\r\n                        <div>My Wallet Balance: <b>{parseFloat(this.state.baseCoinBalance).toFixed(4)}</b> {this.state.baseCoin}</div>\r\n                        <div>My Total Balance: <b>{parseFloat(this.calculateTotalBalance()).toFixed(4)}</b> {this.state.baseCoin}</div>\r\n                    </div>\r\n                    <div style={{ float: 'right' }}>\r\n                        <div style={{ display: (this.state.backTesting ? 'inline-block' : 'none'), marginRight: 25 }}>\r\n                            <b>Back-Test Data:</b> {this.klineTypeSelection.split('.')[0]}.\r\n                            <select value={this.klineTypeSelection} onChange={(e) => { this.klineTypeSelection = e.target.value; this.setState(this.state); }}>\r\n                                {(() => {\r\n                                    const options = [];\r\n                                    for (const key1 in this.klineTypes) {\r\n                                        options.push(<optgroup label={key1} key={key1}></optgroup>);\r\n                                        for (const key2 in this.klineTypes[key1]) {\r\n                                            const keysCombined = key1 + '.' + key2;\r\n                                            options.push(<option value={keysCombined} key={keysCombined}>{key2}</option>);\r\n                                        }\r\n                                        options.push(<option disabled={true} key={key1 + 'seperator'}>-----------</option>)\r\n                                    }\r\n                                    return options;\r\n                                })()}\r\n                            </select>\r\n                        </div>\r\n                        <button onClick={() => this.setState({ ...this.state, coinsModalOpen: true })}>Browse Coins</button>\r\n                    </div>\r\n                    <div style={{ clear: 'both' }}></div>\r\n                </div>\r\n                <div style={{ overflow: 'hidden' }}>\r\n                    {[true, false].map((isActiveTable) => (\r\n                        <div style={{ float: 'left', width: (isActiveTable ? '44' : '56') + '%' }} key={isActiveTable}>\r\n                            {isActiveTable ? (\r\n                                <h4 style={{ color: 'green' }}>Active Coins (we are IN)</h4>\r\n                            ) : (\r\n                                <h4 style={{ color: 'orange' }}>Passive Coins (we are OUT)</h4>\r\n                            )}\r\n                            <table className=\"myCoinsTable\" style={{ width: '100%' }}>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Coin</th>\r\n                                        <th>Price<br />(Live)</th>\r\n                                        <th>Price<br />Chng %</th>\r\n                                        <th>Win<br />Lose</th>\r\n                                        <th>Buy Price</th>\r\n                                        <th hidden={!isActiveTable}>Max Price</th>\r\n                                        <th hidden={!isActiveTable}>Lower<br />Margin</th>\r\n                                        <th hidden={isActiveTable}>Sell Price</th>\r\n                                        <th hidden={isActiveTable}>Min Price</th>\r\n                                        <th hidden={isActiveTable}>Upper<br />Margin</th>\r\n                                        <th>Buy/Sell&nbsp;&nbsp;\r\n                                            <select value={this.state.buySellColType} onChange={(e) => { this.setState({ ...this.state, buySellColType: e.target.value }); }}>\r\n                                                <option value=\"auto\">Auto</option>\r\n                                                <option value=\"manual\">Manual</option>\r\n                                            </select>\r\n                                            <input type=\"checkbox\" hidden={isActiveTable} onChange={(e) => { this.state.myCoins.forEach((myCoin) => myCoin.autoBuySell = e.target.checked); this.setState(this.state); }} />\r\n                                        </th>\r\n                                        <th hidden={!this.state.backTesting}>Back Testing <button onClick={() => this.state.myCoins.forEach((myCoin) => this.backTestStrategyFor(myCoin))}>Back-Test All</button></th>\r\n                                        <th>Budget</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {this.state.myCoins.map((myCoin, i) => {\r\n                                    if (myCoin.isActive !== isActiveTable) return null;\r\n                                    return (\r\n                                        <tbody key={i}>\r\n                                            <tr className={myCoin.isActive ? 'iam-in' : (myCoin.autoBuySell ? 'iam-watching' : '')}>\r\n                                                <td>\r\n                                                    {myCoin.isActive ? myCoin.targetCoinAmount : ''} {myCoin.coinName}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {myCoin.price || 'N/A'}\r\n                                                </td>\r\n                                                <td>{(() => { // calculate price chng %\r\n                                                    let value = 0;\r\n                                                    if (myCoin.initialPrice) value = ((myCoin.price / myCoin.initialPrice) - 1) * 100;\r\n                                                    return <span style={{ color: value > 0 ? 'green' : (value < 0 ? 'red' : '') }}>{(value > 0 ? '+' : '') + value.toFixed(2)}%</span>\r\n                                                })()}\r\n                                                </td>\r\n                                                <td>{(() => { // calculate win/lose situation\r\n                                                    let value = ((myCoin.budgetInBaseCoin / myCoin.initialBudgetInBaseCoin) - 1) * 100;\r\n                                                    return <span style={{ color: value > 0 ? 'green' : (value < 0 ? 'red' : '') }}>{(value > 0 ? '+' : '') + value.toFixed(2)}%</span>\r\n                                                })()}\r\n                                                </td>\r\n                                                <td>\r\n                                                    {myCoin.lastBuyPrice || 'N/A'}\r\n                                                    <br />\r\n                                                    Buys: ({myCoin.buyCount})\r\n                                                </td>\r\n                                                <td hidden={!isActiveTable}>\r\n                                                    {myCoin.maxPriceSinceLastBuy || 'N/A'}\r\n                                                </td>\r\n                                                <td hidden={!isActiveTable} style={{ color: 'red' }}>\r\n                                                    {myCoin.lowerMargin !== undefined ? parseFloat(myCoin.lowerMargin).toFixed(2) : 'N/A'} / {parseFloat(myCoin.lowerMarginTarget).toFixed(2)}\r\n                                                    <div hidden={myCoin.lowerMargin === undefined} style={{ position: 'relative' }}>\r\n                                                        <div style={{ position: 'absolute', width: (myCoin.lowerMargin / myCoin.lowerMarginTarget * 100) + '%', height: 10, backgroundColor: 'red' }}></div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td hidden={isActiveTable}>\r\n                                                    {myCoin.lastSellPrice || 'N/A'}\r\n                                                </td>\r\n                                                <td hidden={isActiveTable}>\r\n                                                    {myCoin.minPriceSinceLastSell || 'N/A'}\r\n                                                </td>\r\n                                                <td hidden={isActiveTable} style={{ color: 'green' }}>\r\n                                                    {myCoin.upperMargin !== undefined ? '+' + parseFloat(myCoin.upperMargin).toFixed(2) : 'N/A'} / {'+' + parseFloat(myCoin.upperMarginTarget).toFixed(2)}\r\n                                                    <div hidden={myCoin.upperMargin === undefined} style={{ position: 'relative' }}>\r\n                                                        <div style={{ position: 'absolute', width: (myCoin.upperMargin / myCoin.upperMarginTarget * 100) + '%', height: 10, backgroundColor: 'green' }}></div>\r\n                                                    </div>\r\n                                                </td>\r\n                                                <td>\r\n                                                    {this.state.buySellColType === 'auto' ? (\r\n                                                        <>\r\n                                                            <label><input type=\"checkbox\" checked={myCoin.autoBuySell} onChange={(e) => { myCoin.autoBuySell = e.target.checked; this.setState(this.state); }} />Auto Buy/Sell</label>\r\n                                                            <br />\r\n                                                            <span style={{ marginLeft: 8 }}>\r\n                                                                Buy/Sell Mrgns:&nbsp;\r\n                                                                <input type=\"number\" min={0.2} max={99.8} step={0.1} value={myCoin.upperMarginTarget} onChange={(e) => { myCoin.upperMarginTarget = parseFloat(e.target.value); this.setState(this.state); }} style={{ width: 40, backgroundColor: 'lightgreen' }} />\r\n                                                                <input type=\"number\" min={0.2} max={99.8} step={0.1} value={-myCoin.lowerMarginTarget} onChange={(e) => { myCoin.lowerMarginTarget = -parseFloat(e.target.value); this.setState(this.state); }} style={{ width: 40, backgroundColor: 'orangered' }} />\r\n                                                            </span>\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            <button hidden={isActiveTable} onClick={() => { this.buy(myCoin); }}>Buy</button>\r\n                                                            <button hidden={!isActiveTable} onClick={() => { this.sell(myCoin); }}>Sell</button>\r\n                                                        </>\r\n                                                    )}\r\n                                                </td>\r\n                                                <td hidden={!this.state.backTesting}>\r\n                                                    <button hidden={myCoin.backTestRan} onClick={(e) => { this.backTestStrategyFor(myCoin); }}>Back-Test This Strategy</button>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <input type=\"number\" min={0.2} step={0.1} disabled={myCoin.firstBuyPrice} value={myCoin.budgetInBaseCoin} onChange={(e) => { myCoin.budgetInBaseCoin = parseFloat(e.target.value); this.setState(this.state); }} style={{ width: 40 }} />{this.state.baseCoin}\r\n                                                </td>\r\n                                            </tr>\r\n                                        </tbody>\r\n                                    );\r\n                                })}\r\n                            </table>\r\n                        </div>\r\n                    ))}\r\n                    <div style={{ clear: 'both' }}></div>\r\n                </div>\r\n                {\r\n                    this.state.coinsModalOpen ? (\r\n                        <Suspense>\r\n                            <BrowseCoinsModal\r\n                                modalOpen={this.state.coinsModalOpen}\r\n                                loadCoinsToState={(data) => this.setState({ ...this.state, coins: data })}\r\n                                closeModalFn={() => this.setState({ ...this.state, coinsModalOpen: false })}\r\n                                coins={this.state.coins}\r\n                                myCoins={this.state.myCoins} />\r\n                        </Suspense>\r\n                    ) : null\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    // component lifecycle events\r\n    componentDidMount() {\r\n        console.log(\"component did mount\");\r\n        document.title = \"My Algo Trader | \" + AppSettings.seoTitle;\r\n\r\n        this.interestedCoins.forEach((coin) => this.addCoinToMyCoins(coin));\r\n        this.initListeners();\r\n    }\r\n    componentDidUpdate() {\r\n        //console.log(\"component did update\");\r\n    }\r\n    componentWillUnmount() {\r\n        console.log(\"component will unmount\");\r\n\r\n        // close web socket connection (if exists)\r\n        if (this.binanceWsConnection) this.binanceWsConnection.close();\r\n\r\n        // clear intervals\r\n        clearInterval(this.autoBuySellCheckInterval);\r\n    }\r\n}\r\n\r\nexport default MyAlgoTrader;"],"sourceRoot":""}