{"version":3,"sources":["components/myAlgoTrader/BrowseCoinsModal.js"],"names":["BrowseCoinsModal","fetch","then","response","json","data","console","log","length","filter","coin","symbol","indexOf","substr","parseFloat","priceChangePercent","map","sort","a","b","props","loadCoinsToState","thTd","border","padding","id","hidden","this","modalOpen","style","position","width","textAlign","margin","onClick","closeModalFn","height","backgroundColor","overflowY","borderCollapse","coins","idx","myCoinIdx","myCoins","findIndex","myCoin","trBgColor","isActive","key","color","toFixed","Component"],"mappings":"+MAEMA,E,4LACmB,IAAD,OAChBC,MAAM,8CAA8CC,MAAK,SAACC,GACtDA,EAASC,OAAOF,MAAK,SAAAG,GACjBC,QAAQC,IAAI,yBAA0BF,EAAKG,SAI3CH,GAHAA,EAAOA,EAAKI,QAAO,SAACC,GAChB,OAAyC,IAAjCA,EAAKC,OAAOC,QAAQ,SAAiE,SAA/CF,EAAKC,OAAOE,OAAOH,EAAKC,OAAOH,OAAS,IAAyD,IAAxCM,WAAWJ,EAAKK,wBAE/GC,KAAI,SAACN,GAEb,OADAA,EAAKK,mBAAqBD,WAAWJ,EAAKK,oBACnCL,MAENO,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEH,mBAAqBI,EAAEJ,mBAAqB,GAAK,KAEvE,EAAKK,MAAMC,iBAAiBhB,W,+BAI9B,IAAD,OACCiB,EAAO,CAAEC,OAAQ,kBAAmBC,QAAS,WACnD,OACI,oCACI,yBAAKC,GAAG,oBAAoBC,QAASC,KAAKP,MAAMQ,WAC5C,yBAAKC,MAAO,CAAEC,SAAU,WAAYC,MAAO,OAAQC,UAAW,SAAUC,OAAQ,uBAAwB,4BAAQC,QAASP,KAAKP,MAAMe,cAA5B,UACxG,yBAAKN,MAAO,CAAEE,MAAO,IAAKK,OAAQ,oBAAqBH,OAAQ,mBAAoBI,gBAAiB,QAASC,UAAW,SACpH,2BAAOT,MAAO,CAAEU,eAAgB,WAAYR,MAAO,SAC/C,+BACI,4BACI,wBAAIF,MAAOP,GAAX,YAA2BK,KAAKP,MAAMoB,MAAMhC,OAA5C,KACA,wBAAIqB,MAAOP,GAAX,gBACA,wBAAIO,MAAOP,GAAX,aAGR,+BACKK,KAAKP,MAAMoB,MAAMxB,KAAI,SAACN,EAAM+B,GACzB,IAAMC,EAAY,EAAKtB,MAAMuB,QAAQC,WAAU,SAACC,GAAD,OAAYA,EAAOlC,SAAWD,EAAKC,UAC5EmC,GAA2B,IAAfJ,EAAoB,EAAKtB,MAAMuB,QAAQD,GAAWK,SAAW,cAAgB,SAAY,GAC3G,OACI,wBAAIC,IAAKP,EAAKZ,MAAO,CAAEQ,gBAAiBS,IACpC,wBAAIjB,MAAOP,EAAMY,QAAS,kBAAM5B,QAAQC,IAAIG,KAAQA,EAAKC,QACzD,wBAAIkB,MAAK,eAAOP,EAAP,CAAa2B,MAAOvC,EAAKK,mBAAqB,EAAI,QAAWL,EAAKK,mBAAqB,EAAI,MAAQ,MACvGL,EAAKK,mBAAqB,EAAI,IAAM,GAAIL,EAAKK,mBAAmBmC,QAAQ,IAE7E,wBAAIrB,MAAOP,GACP,4BAAQI,UAAyB,IAAfgB,IAAlB,oBACA,4BAAQhB,UAAyB,IAAfgB,IAAqB,EAAKtB,MAAMuB,QAAQD,GAAWK,WAArE,gC,GA7CjBI,aA2DhBnD","file":"static/js/10.34af8e7a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass BrowseCoinsModal extends Component {\r\n    componentDidMount() {\r\n        fetch('https://api.binance.com/api/v3/ticker/24hr').then((response) => {\r\n            response.json().then(data => {\r\n                console.log(\"All Coins in Binance: \", data.length);\r\n                data = data.filter((coin) => {\r\n                    return (coin.symbol.indexOf('USDT') !== -1 && coin.symbol.substr(coin.symbol.length - 4) === 'USDT' && parseFloat(coin.priceChangePercent) !== 0);\r\n                });\r\n                data = data.map((coin) => { // normalize each coin data\r\n                    coin.priceChangePercent = parseFloat(coin.priceChangePercent);\r\n                    return coin;\r\n                });\r\n                data.sort((a, b) => a.priceChangePercent < b.priceChangePercent ? 1 : -1);\r\n                //console.log(\"XXX_USDT Coins: \", data);\r\n                this.props.loadCoinsToState(data);\r\n            });\r\n        });\r\n    }\r\n    render() {\r\n        const thTd = { border: '1px dashed gray', padding: '6px 8px' };\r\n        return (\r\n            <>\r\n                <div id=\"coin-list-wrapper\" hidden={!this.props.modalOpen}>\r\n                    <div style={{ position: 'absolute', width: '100%', textAlign: 'center', margin: '20px 0px 0px 290px' }}><button onClick={this.props.closeModalFn}>CLOSE</button></div>\r\n                    <div style={{ width: 500, height: 'calc(100% - 40px)', margin: '20px auto 0 auto', backgroundColor: 'white', overflowY: 'auto' }}>\r\n                        <table style={{ borderCollapse: 'collapse', width: '100%' }}>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th style={thTd}>Symbols ({this.props.coins.length})</th>\r\n                                    <th style={thTd}>24h Change %</th>\r\n                                    <th style={thTd}>Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.coins.map((coin, idx) => {\r\n                                    const myCoinIdx = this.props.myCoins.findIndex((myCoin) => myCoin.symbol === coin.symbol);\r\n                                    const trBgColor = myCoinIdx !== -1 ? (this.props.myCoins[myCoinIdx].isActive ? 'greenyellow' : 'orange') : '';\r\n                                    return (\r\n                                        <tr key={idx} style={{ backgroundColor: trBgColor }}>\r\n                                            <td style={thTd} onClick={() => console.log(coin)}>{coin.symbol}</td>\r\n                                            <td style={{ ...thTd, color: coin.priceChangePercent > 0 ? 'green' : (coin.priceChangePercent < 0 ? 'red' : '') }}>\r\n                                                {coin.priceChangePercent > 0 ? '+' : ''}{coin.priceChangePercent.toFixed(2)}\r\n                                            </td>\r\n                                            <td style={thTd}>\r\n                                                <button hidden={!(myCoinIdx === -1)}>+ Start Watching</button>\r\n                                                <button hidden={!(myCoinIdx !== -1 && !this.props.myCoins[myCoinIdx].isActive)}>- End Watching</button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    )\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BrowseCoinsModal;"],"sourceRoot":""}