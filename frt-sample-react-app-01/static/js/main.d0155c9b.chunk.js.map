{"version":3,"sources":["redux/topNavMenu/topNavMenu.actions.js","data/AppSettings.js","redux/todos/todos.actions.js","components/header/HeaderNavItem.js","components/header/HeaderNav.js","redux/userAuth/userAuth.actions.js","components/UserWelcome.js","components/header/Header.js","components/Footer.js","components/ContentBody.js","App.js","serviceWorker.js","redux/topNavMenu/topNavMenu.reducer.js","redux/userAuth/userAuth.reducer.js","redux/todos/todos.reducer.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["ADD_NEW","namespace","REMOVE_LAST","LOG_ME_IN","AppSettings","seoTitle","siteOwner","footerText","navItems","text","toLink","SET_TODOS","HeaderNavItem","to","this","props","navItem","isActive","match","location","isExact","pathname","startsWith","className","activeClassName","React","Component","HeaderNav","id","map","index","key","length","maxNavItems","onClick","addNew","style","marginLeft","removeLast","attrProp","connect","state","topNav","items","maxItemsAllowed","dispatch","type","payload","newMenuText","newToLink","REQ_ENDED","UserWelcome","console","log","startRequest","setTimeout","logMeIn","userAuth","isAuthenticated","reqState","userName","logMeOut","color","makeRequest","bind","uName","endRequest","Header","backgroundColor","float","marginTop","Footer","ftText","Date","getFullYear","styles","footerRoot","clear","ContentBody","whatToDoChanged","generalSettings","whatToDo","testVal","boards","rows","cols","value","setState","LazyRoutes","Home","lazy","Boards","FunctionComponent","MyAlgoTrader","FunctionComponentTS","Todos","NotFound","fallback","path","exact","component","person","name","propVal","backTesting","App","Boolean","window","hostname","INITIAL_STATE","reducer","action","pop","inProgress","todos","rootReducer","combineReducers","topNavMenu","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d0155c9b.chunk.js","sourcesContent":["const namespace = 'topNavMenu';\r\n\r\nexport const ADD_NEW = namespace + '/ADD_NEW';\r\nexport const REMOVE_LAST = namespace + '/REMOVE_LAST';\r\n\r\nexport const LOG_ME_IN = namespace + '/LOG_ME_IN'; // duplicate action name test (why we need namespacing)","const AppSettings = {\r\n    seoTitle: \"Firat's Sample React App\",\r\n    siteOwner: 'Firat',\r\n    footerText: 'Copyright Text',\r\n    navItems: [\r\n        { text: 'Home', toLink: '/' },\r\n        { text: 'Boards', toLink: '/boards' },\r\n        { text: 'Missing Page', toLink: '/missing-page' },\r\n        { text: 'Func. Comp. (JS)', toLink: '/function-component' },\r\n        { text: 'My Algo Trader', toLink: '/my-algo-trader' },\r\n        { text: 'M.A.T. (Back-Test)', toLink: '/my-algo-trader-backtest' },\r\n        { text: 'Func. Comp. (TS)', toLink: '/function-component-with-ts' },\r\n        { text: 'Todos', toLink: '/todos' },\r\n    ]\r\n};\r\n\r\nexport default AppSettings;","const namespace = 'todos';\r\n\r\nexport const SET_TODOS = namespace + '/SET_TODOS';","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass HeaderNavItem extends React.Component {\r\n    render() {\r\n        return (\r\n            <NavLink to={this.props.navItem.toLink} isActive={(match, location) => {\r\n                if (match && match.isExact) return true; // exact match case\r\n                // if there is no exact match > additional rules can be added below\r\n                //console.log(this.props.navItem, location);\r\n                if (location.pathname.startsWith('/todo/') && this.props.navItem.toLink === '/todos') return true;\r\n                return (location.pathname === this.props.navItem.toLink);\r\n            }} className=\"nav-item\" activeClassName=\"active\">{this.props.navItem.text}</NavLink>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HeaderNavItem;","import React from 'react';\r\nimport HeaderNavItem from './HeaderNavItem';\r\nimport { ADD_NEW, REMOVE_LAST } from \"../../redux/topNavMenu/topNavMenu.actions\";\r\n\r\nimport '../../css/HeaderNav.css';\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass HeaderNav extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id=\"header-navigation\">\r\n                {this.props.navItems.map((navItem, index) => {\r\n                    return (\r\n                        <HeaderNavItem navItem={navItem} key={index} />\r\n                    );\r\n                })}\r\n                {this.props.navItems.length < this.props.maxNavItems ? ( // add button\r\n                    <button onClick={() => this.props.addNew('NEW', '/new')} style={{ marginLeft: 5 }}>+</button>\r\n                ) : null}\r\n                {this.props.navItems.length > 0 ? ( // remove button\r\n                    <button onClick={this.props.removeLast} style={{ marginLeft: 10 }}>-</button>\r\n                ) : null}\r\n                <span style={{ marginLeft: 8 }}>({this.props.navItems.length} {this.props.attrProp}{this.props.navItems.length !== 1 ? 's' : ''})</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => { // map state to props\r\n    return {\r\n        navItems: state.topNav.items,\r\n        maxNavItems: state.topNav.maxItemsAllowed\r\n    };\r\n}, dispatch => { // map dispatch to props\r\n    return {\r\n        addNew: (text, toLink) => dispatch({ type: ADD_NEW, payload: { newMenuText: text, newToLink: toLink } }),\r\n        removeLast: () => dispatch({ type: REMOVE_LAST })\r\n    };\r\n})(HeaderNav);","const namespace = 'userAuth';\r\n\r\nexport const LOG_ME_IN = namespace + '/LOG_ME_IN';\r\nexport const LOG_ME_OUT = namespace + '/LOG_ME_OUT';\r\n\r\nexport const REQ_STARTED = namespace + '/REQ_STARTED';\r\nexport const REQ_ENDED = namespace + '/REQ_ENDED';","import React, { Component } from \"react\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LOG_ME_IN, LOG_ME_OUT, REQ_STARTED, REQ_ENDED } from \"../redux/userAuth/userAuth.actions\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UserWelcome extends Component {\r\n    makeRequest() {\r\n        console.log(\"request started\");\r\n        this.props.startRequest();\r\n        setTimeout(() => {\r\n            console.log(\"request ended\");\r\n            //this.props.endRequest();\r\n            this.props.logMeIn('Firat');\r\n        }, 1500);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.props.userAuth.isAuthenticated ? 'has-auth' : 'no-auth'}>\r\n                    {this.props.userAuth.reqState !== 'running' ? (\r\n                        <>\r\n                            <span>Welcome, <b>{!this.props.userAuth.isAuthenticated ? 'Guest' : this.props.userAuth.userName}</b>! </span>\r\n                            {!this.props.userAuth.isAuthenticated ? (\r\n                                <NavLink to=\"#\" onClick={this.makeRequest.bind(this)} style={{ color: 'dodgerblue' }}>Login</NavLink>\r\n                            ) : (\r\n                                <NavLink to=\"#\" onClick={this.props.logMeOut} style={{ color: 'dodgerblue' }}>Logout</NavLink>\r\n                            )}\r\n                        </>\r\n                    ) : (\r\n                        <span>Logging in...</span>\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(state => { // map state to props\r\n    return {\r\n        userAuth: state.userAuth\r\n    };\r\n}, dispatch => { // map dispatch to props\r\n    return {\r\n        logMeIn: (uName) => dispatch({ type: LOG_ME_IN, payload: { userName: uName } }),\r\n        logMeOut: () => dispatch({ type: LOG_ME_OUT }),\r\n        startRequest: () => dispatch({ type: REQ_STARTED }),\r\n        endRequest: () => dispatch({ type: REQ_ENDED }),\r\n    };\r\n})(UserWelcome);","import React, { Component } from 'react';\r\nimport HeaderNav from \"./HeaderNav\";\r\nimport UserWelcome from \"../UserWelcome\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header style={{ backgroundColor: '#ffe595' }}>\r\n                <div style={{ float: 'right' }}>\r\n                    <UserWelcome></UserWelcome>\r\n                </div>\r\n                <h3 style={{ marginTop: 0 }}>{this.props.siteOwner}'s Sample React App</h3>\r\n                <HeaderNav attrProp=\"top menu\" />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport UserWelcome from \"./UserWelcome\";\r\n\r\nclass Footer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.ftText = this.props.footerText + \" | \" + new Date().getFullYear();\r\n        this.styles = {\r\n            footerRoot: {\r\n                backgroundColor: '#8bc34a'\r\n            }\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <footer style={this.styles.footerRoot}>\r\n                <div style={{ float: 'left' }}>{this.ftText}</div>\r\n                <div style={{ float: 'right' }}>\r\n                    <UserWelcome></UserWelcome>\r\n                </div>\r\n                <div style={{ clear: 'both' }}></div>\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Suspense } from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nclass ContentBody extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.whatToDoChanged = this.whatToDoChanged.bind(this);\r\n        this.state = {\r\n            generalSettings: { whatToDo: 'increment', testVal: 23 },\r\n            boards: [\r\n                { rows: 6, cols: 8 },\r\n                { rows: 7, cols: 5 }\r\n            ]\r\n        };\r\n    }\r\n\r\n    whatToDoChanged(value) {\r\n        this.setState((state) => {\r\n            state.generalSettings.whatToDo = value;\r\n            return state;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"ContentBody render fired!\");\r\n\r\n        const LazyRoutes = {\r\n            Home: React.lazy(() => import(\"../routes/Home\")),\r\n            Boards: React.lazy(() => import(\"../routes/Boards\")),\r\n            FunctionComponent: React.lazy(() => import(\"../routes/FunctionComponent\")),\r\n            MyAlgoTrader: React.lazy(() => import(\"../routes/MyAlgoTrader\")),\r\n            FunctionComponentTS: React.lazy(() => import(\"../routes/FunctionComponentTs\")),\r\n            Todos: React.lazy(() => import(\"../routes/Todos\")),\r\n            NotFound: React.lazy(() => import(\"../routes/404\"))\r\n        };\r\n\r\n        return (\r\n            <div id=\"content-body\">\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={() => <LazyRoutes.Home person={{ name: 'Firat' }}></LazyRoutes.Home>} />\r\n                        <Route path=\"/boards\" component={LazyRoutes.Boards} />\r\n                        <Route path=\"/function-component\" component={() => <LazyRoutes.FunctionComponent propVal={\"prop value 1\"} />} />\r\n                        <Route path=\"/my-algo-trader\" component={LazyRoutes.MyAlgoTrader} />\r\n                        <Route path=\"/my-algo-trader-backtest\" component={() => <LazyRoutes.MyAlgoTrader backTesting={true} />} />\r\n                        <Route path=\"/function-component-with-ts\" component={() => <LazyRoutes.FunctionComponentTS />} />\r\n                        <Route path=\"/todos\" component={() => <LazyRoutes.Todos />} />\r\n                        <Route path=\"/todo/:id\" component={() => <LazyRoutes.Todos />} />\r\n                        <Route path=\"*\" component={LazyRoutes.NotFound} />\r\n                    </Switch>\r\n                </Suspense>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ContentBody;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport './responsive.css';\r\nimport Header from \"./components/header/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport ContentBody from \"./components/ContentBody\";\r\nimport { /*BrowserRouter (for HTML5 History API routing) (needs server config too)*/ HashRouter } from 'react-router-dom';\r\nimport AppSettings from './data/AppSettings';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    console.log(\"App component did mount\");\r\n  }\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Header siteOwner={AppSettings.siteOwner} />\r\n        <ContentBody />\r\n        <Footer footerText={AppSettings.footerText} />\r\n      </HashRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import AppSettings from \"../../data/AppSettings\";\r\nimport { ADD_NEW, REMOVE_LAST, LOG_ME_IN } from \"./topNavMenu.actions\";\r\n\r\nconst INITIAL_STATE = {\r\n    maxItemsAllowed: 10,\r\n    items: AppSettings.navItems\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    console.log(\"topNav reducer here!\", state, action);\r\n    switch (action.type) {\r\n        case ADD_NEW:\r\n            return { ...state, items: [...state.items, { text: action.payload.newMenuText || 'Redux Added', toLink: action.payload.newToLink || '/redux-added' }] };\r\n        case REMOVE_LAST:\r\n            state.items.pop(); // remove last one\r\n            return { ...state, items: [...state.items] };\r\n        case LOG_ME_IN:\r\n            console.log(\"LOG_ME_IN (topNav reducer)\");\r\n            return state;\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { LOG_ME_IN, LOG_ME_OUT, REQ_STARTED, REQ_ENDED } from \"./userAuth.actions\";\r\n\r\nconst INITIAL_STATE = {\r\n    isAuthenticated: false,\r\n    reqState: 'stopped'\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    console.log(\"userAuth reducer here!\", state, action);\r\n    switch (action.type) {\r\n        case LOG_ME_IN:\r\n            console.log(\"LOG_ME_IN (userAuth reducer)\");\r\n            return { ...state, isAuthenticated: true, userName: action.payload.userName, reqState: 'stopped' };\r\n        case LOG_ME_OUT:\r\n            return INITIAL_STATE;\r\n        case REQ_STARTED:\r\n            return { ...state, reqState: 'running' };\r\n        case REQ_ENDED:\r\n            return { ...state, reqState: 'stopped' };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { SET_TODOS } from \"./todos.actions\";\r\n\r\nconst INITIAL_STATE = {\r\n    inProgress: false,\r\n    todos: []\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n    console.log(\"todos reducer here!\", state);\r\n    switch (action.type) {\r\n        case SET_TODOS:\r\n            return { ...state, todos: action.payload.todos };\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { combineReducers } from 'redux';\r\n\r\n// reducers here\r\nimport topNavMenu from './topNavMenu/topNavMenu.reducer';\r\nimport userAuth from \"./userAuth/userAuth.reducer\";\r\nimport todos from './todos/todos.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    topNav: topNavMenu,\r\n    userAuth: userAuth,\r\n    todos: todos\r\n});\r\n\r\nexport default rootReducer;","import { createStore } from 'redux';\r\nimport rootReducer from './rootReducer';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// Redux Setup\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render((\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}