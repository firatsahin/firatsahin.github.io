{"version":3,"sources":["utility/common.tsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","routes/Todos.tsx"],"names":["setTitle","title","document","AppSettings","seoTitle","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Todos","todo","useState","inProgress","setInProgress","todos","useSelector","state","dispatch","useDispatch","params","useParams","pageType","id","console","log","find","parseInt","useEffect","fetch","then","response","ok","json","Promise","reject","type","SET_TODOS","payload","catch","error","finally","style","width","borderSpacing","textAlign","map","key","backgroundColor","completed","href","color","userId","JSON","stringify"],"mappings":"yIAAA,8CAEMA,EAAW,SAACC,GACdC,SAASD,OAASA,EAAQA,EAAQ,MAAQ,IAAME,IAAYC,W,gCCAjD,SAASC,EAAeC,EAAKC,GAC1C,OCJa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKC,GACjD,GAAMG,OAAOC,YAAYC,OAAON,IAAgD,uBAAxCM,OAAOC,UAAUC,SAASC,KAAKT,GAAvE,CAIA,IAAIU,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKhB,EAAII,OAAOC,cAAmBM,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAETnB,GAAKS,EAAKW,SAAWpB,GAH8CU,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBV,EAAKC,IGJ3C,WACb,MAAM,IAAIsB,UAAU,wDHG0C,GAJhE,mC,kGI4HeC,UAlGS,WAAO,IAAD,EActBC,EAdsB,EAGUC,oBAAkB,GAH5B,mBAGnBC,EAHmB,KAGPC,EAHO,KAMpBC,EAAoBC,aAAmC,SAAAC,GAAK,OAAIA,EAAMF,MAAMA,SAC5EG,EAAWC,cAEXC,EAASC,cACTC,EAA8BF,EAAOG,GAAK,SAAW,OAsC3D,OArCAC,QAAQC,IAAIL,EAAQE,GAIH,WAAbA,IACAX,EAAOI,EAAMW,MAAK,SAACpB,GAAD,OAAWA,EAAMiB,MAAQI,SAASP,EAAOG,MAAQ,MACnEC,QAAQC,IAAI,eAAgBd,IAGhCiB,qBAAU,WAqBN,OApBAJ,QAAQC,IAAI,oBACZ7C,YAAS,SAEY,IAAjBmC,EAAMR,SACNO,GAAc,GACde,MAAM,8CACDC,MAAK,SAAAC,GACF,OAAIA,EAASC,GAAWD,EAASE,OAC1BC,QAAQC,OAAOJ,MAEzBD,MAAK,SAAAG,GAEFf,EAAS,CAAEkB,KAAMC,IAAWC,QAAS,CAAEvB,MAAOkB,QAC/CM,OAAM,SAAUC,GACfhB,QAAQC,IAAIe,MACbC,SAAQ,WACPjB,QAAQC,IAAI,qCACZX,GAAc,OAGnB,WACHU,QAAQC,IAAI,sBACZ7C,YAAS,SAGd,IAGC,oCACKiC,EACG,0DAEA,oCACkB,SAAbS,GACG,oCACI,sCAAYP,EAAMR,OAAlB,KAECQ,EAAMR,OAAS,EACZ,2BAAOmC,MAAO,CAAEC,MAAO,OAAQC,cAAe,IAC1C,+BACI,wBAAIF,MAAO,CAAEG,UAAW,SACpB,iCACA,qCACA,oCACA,wCAGR,+BACK9B,EAAM+B,KAAI,SAACnC,GAAD,OACP,wBAAIoC,IAAKpC,EAAKY,GAAImB,MAAO,CAAEM,gBAAkBrC,EAAKsC,UAAY,UAAY,YACtE,4BAAKtC,EAAKY,IACV,4BACI,uBAAG2B,KAAM,UAAYvC,EAAKY,GAAImB,MAAO,CAAES,MAAO,eAAiBxC,EAAK9B,QAExE,4BAAK8B,EAAKyC,QACV,wBAAIV,MAAO,CAAES,MAAQxC,EAAKsC,UAAY,QAAU,QAAWtC,EAAKsC,UAAY,YAAc,iBAK1G,MAIE,WAAb3B,GACG,oCACI,+CAAWX,SAAX,aAAW,EAAMY,IAEjB,8BAAM,6BAAM8B,KAAKC,UAAU3C,EAAM,KAAM","file":"static/js/7.e62a1d63.chunk.js","sourcesContent":["import AppSettings from \"../data/AppSettings\";\r\n\r\nconst setTitle = (title: string | null): void => {\r\n    document.title = (title ? title + ' | ' : '') + AppSettings.seoTitle;\r\n}\r\n\r\nexport { setTitle }","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useEffect, useState } from \"react\";\r\nimport { setTitle } from '../utility/common';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SET_TODOS } from \"../redux/todos/todos.actions\";\r\n\r\ntype TodoType = {\r\n    id: number,\r\n    userId: number,\r\n    title: string,\r\n    completed: boolean\r\n}\r\n\r\ntype RootState = { // temp > normally needs to be in common area\r\n    todos: TodosStateType\r\n}\r\n\r\ntype TodosStateType = {\r\n    inProgress: boolean,\r\n    todos: TodoType[]\r\n}\r\n\r\ntype TodosParamsType = {\r\n    id: string\r\n}\r\n\r\nconst Todos: React.FC = () => {\r\n    // local state\r\n    //const [todos, setTodos] = useState<TodoType[]>([]);\r\n    const [inProgress, setInProgress] = useState<boolean>(false);\r\n\r\n    // redux state\r\n    const todos: TodoType[] = useSelector<RootState, TodoType[]>(state => state.todos.todos);\r\n    const dispatch = useDispatch();\r\n\r\n    const params = useParams<TodosParamsType>(); // accessing URL params\r\n    const pageType: 'detail' | 'list' = params.id ? 'detail' : 'list';\r\n    console.log(params, pageType);\r\n\r\n    // todo detail object\r\n    let todo: TodoType | undefined;\r\n    if (pageType === 'detail') {\r\n        todo = todos.find((value) => value.id === (parseInt(params.id) || -1));\r\n        console.log(\"todo detail:\", todo);\r\n    }\r\n\r\n    useEffect(() => { // component did mount equivalent\r\n        console.log(\"use effect > set\");\r\n        setTitle(\"Todos\");\r\n\r\n        if (todos.length === 0) { // if we have data already in redux > don't call service again, use redux state\r\n            setInProgress(true);\r\n            fetch('https://jsonplaceholder.typicode.com/todos')\r\n                .then(response => {\r\n                    if (response.ok) return response.json();\r\n                    return Promise.reject(response);\r\n                })\r\n                .then(json => { // success\r\n                    //setTodos(json);\r\n                    dispatch({ type: SET_TODOS, payload: { todos: json } })\r\n                }).catch(function (error) { // failure\r\n                    console.log(error);\r\n                }).finally(function () { // always\r\n                    console.log(\"request stopped (success or fail)\");\r\n                    setInProgress(false);\r\n                });\r\n        }\r\n        return () => {\r\n            console.log(\"use effect > unset\");\r\n            setTitle(null);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            {inProgress ? (\r\n                <div>Getting todos from API...</div>\r\n            ) : (\r\n                <>\r\n                    {pageType === 'list' && ( // mode => list\r\n                        <>\r\n                            <h2>Todos ({todos.length})</h2>\r\n\r\n                            {todos.length > 0 ? (\r\n                                <table style={{ width: '100%', borderSpacing: 3 }}>\r\n                                    <thead>\r\n                                        <tr style={{ textAlign: 'left' }}>\r\n                                            <th>#</th>\r\n                                            <th>Title</th>\r\n                                            <th>User</th>\r\n                                            <th>Status</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {todos.map((todo) =>\r\n                                            <tr key={todo.id} style={{ backgroundColor: (todo.completed ? '#beffbe' : '#ffd5c5') }}>\r\n                                                <td>{todo.id}</td>\r\n                                                <td>\r\n                                                    <a href={\"#/todo/\" + todo.id} style={{ color: 'dodgerblue' }}>{todo.title}</a>\r\n                                                </td>\r\n                                                <td>{todo.userId}</td>\r\n                                                <td style={{ color: (todo.completed ? 'green' : 'red') }}>{todo.completed ? 'COMPLETED' : 'ONGOING'}</td>\r\n                                            </tr>\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n                            ) : null}\r\n                        </>\r\n                    )}\r\n\r\n                    {pageType === 'detail' && ( // mode => detail\r\n                        <>\r\n                            <h2>Todo #{todo?.id}</h2>\r\n\r\n                            <code><pre>{JSON.stringify(todo, null, 2)}</pre></code>\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todos"],"sourceRoot":""}